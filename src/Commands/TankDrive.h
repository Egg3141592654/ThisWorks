// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef TANKDRIVE_H
#define TANKDRIVE_H


#include "Commands/Subsystem.h"
#include "../Robot.h"

/**
 * This class collects the information to run the drivetrain of the robot.
 */
class TankDrive: public Command {
public:
    /*
     * Initializes a new instance of the TankDrive class. This is the teleop constructor that will have initial
     * conditions of 0 speed (stopped)
     */
	TankDrive();

	/*
	 * Initializes a new instance of the TankDrive class with initial conditions. Running this command will start the
	 * robot driving at the provided speed.
	 *
	 * @param speed: a double between -1->1 that is the speed of the robot.
	 */
	TankDrive(double);

	/*
		 * This method is called to run once when this command runs.
		 */
		virtual void Initialize();

		/*
		 * This is the method that will actually take in inputs and move the drivetrain at 15Hz refresh.
		 */
		virtual void Execute();

		/*
		 * This method determines if the drivetrain command has actually completed. In Teleop, we should never complete
		 * this command, however in Autonomous, we would like to end early and move on with the script.
		 */
		virtual bool IsFinished();

		/*
		 * This is the method called once when it is declared "finished". We do nothing here.
		 */
		virtual void End();

		/*
		 * This method gets called when another instance of the command is called and we need to let it go.
		 * We shouldn't do anything special here...
		 */
		virtual void Interrupted();

private:
	/*
	 * This variable is a hold determining if the command is operating in autonomous mode.
	 */
	bool isAutonomous;

	/*
	 * This is the initial speed that the robot will move in autonomous mode.
	 */
	float speed;
};

#endif
